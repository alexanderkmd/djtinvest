# Generated by Django 5.1 on 2024-09-01 05:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountId', models.CharField(max_length=64, unique=True)),
                ('type', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=128)),
                ('bank', models.CharField(max_length=60)),
                ('status', models.CharField(max_length=32)),
                ('opened', models.DateField()),
                ('closed', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('num', models.IntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_rus', models.CharField(max_length=255, verbose_name='Название на русском')),
                ('symbol', models.CharField(max_length=3, verbose_name='Символ')),
                ('id', models.CharField(max_length=7, verbose_name='Код ЦБ РФ')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
            },
        ),
        migrations.CreateModel(
            name='InstrumentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figi', models.CharField(max_length=12)),
                ('ticker', models.CharField(max_length=20)),
                ('isin', models.CharField(max_length=12)),
                ('uid', models.CharField(max_length=40, unique=True)),
                ('position_uid', models.CharField(max_length=40)),
                ('asset_uid', models.CharField(max_length=40)),
                ('instrument_type', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=120)),
                ('exchange', models.CharField(max_length=100)),
                ('class_code', models.CharField(max_length=32)),
                ('lot', models.IntegerField()),
                ('currency', models.CharField(max_length=3)),
                ('minPriceIncrement', models.DecimalField(decimal_places=9, max_digits=20)),
                ('api_trade_available_flag', models.BooleanField()),
                ('buyAvailableFlag', models.BooleanField()),
                ('sellAvailableFlag', models.BooleanField()),
                ('for_iis_flag', models.BooleanField()),
                ('for_qual_investor_flag', models.BooleanField()),
                ('weekend_flag', models.BooleanField()),
                ('blocked_tca_flag', models.BooleanField()),
                ('icon', models.CharField(max_length=32)),
                ('logo_base_color', models.CharField(max_length=7)),
                ('text_color', models.CharField(max_length=7)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('country_of_risk', models.CharField(max_length=2)),
                ('country_of_risk_name', models.CharField(max_length=128)),
                ('sector', models.CharField(max_length=64)),
                ('otc_flag', models.BooleanField()),
                ('div_yield_flag', models.BooleanField(blank=True, null=True)),
                ('share_type', models.CharField(max_length=120)),
                ('real_exchange', models.CharField(max_length=120)),
                ('liquidity_flag', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Параметры интструмента',
                'verbose_name_plural': 'Параметры инструментов',
            },
        ),
        migrations.CreateModel(
            name='LastPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figi', models.CharField(max_length=12)),
                ('instrument_uid', models.CharField(max_length=40)),
                ('price', models.DecimalField(decimal_places=9, max_digits=20)),
                ('timestamp', models.DateTimeField()),
                ('last_price_type', models.CharField(max_length=80)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CentrobankRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('currency', models.CharField(max_length=3)),
                ('rate', models.DecimalField(decimal_places=9, max_digits=20)),
            ],
            options={
                'verbose_name': 'Курс ЦБ РФ',
                'verbose_name_plural': 'Курсы ЦБ РФ',
                'unique_together': {('date', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idValue', models.CharField(db_index=True, max_length=40)),
                ('idType', models.CharField(db_index=True, max_length=4)),
                ('instrumentData', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analyzer.instrumentdata')),
            ],
            options={
                'verbose_name': 'Интструмент',
                'verbose_name_plural': 'Инструменты',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operationId', models.CharField(max_length=50, unique=True)),
                ('parentOperationId', models.CharField(blank=True, max_length=50, null=True)),
                ('currency', models.CharField(max_length=3)),
                ('payment', models.DecimalField(decimal_places=9, max_digits=20)),
                ('price', models.DecimalField(decimal_places=9, max_digits=20)),
                ('state', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField()),
                ('type', models.CharField(max_length=64)),
                ('quantity', models.BigIntegerField(default=0)),
                ('quantity_rest', models.BigIntegerField(default=0)),
                ('figi', models.CharField(blank=True, max_length=16, null=True)),
                ('instrument_type', models.CharField(max_length=8)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analyzer.account')),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='analyzer.instrumentdata')),
            ],
            options={
                'verbose_name': 'Операция',
                'verbose_name_plural': 'Операции',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figi', models.CharField(max_length=12)),
                ('quantity', models.IntegerField()),
                ('blocked', models.BooleanField()),
                ('position_uid', models.CharField(max_length=40)),
                ('instrument_uid', models.CharField(max_length=40)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analyzer.account')),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='analyzer.instrumentdata')),
            ],
            options={
                'verbose_name': 'Позиция',
                'verbose_name_plural': 'Позиции',
                'unique_together': {('account', 'instrument', 'blocked')},
            },
        ),
    ]
